# assembly generated by minc compiler ...
	.globl	f
    .type	f, @function
f:
    .cfi_startproc
    pushq	%rbp
    movq	%rsp, %rbp
	movq	%rdi, -8(%rbp)
	subq	$8, %rsp
	subq	$0, %rsp
	pushq	$1
	pushq	$2
	popq	%rax
	popq	%rcx
	cmpq	%rax, %rcx
	movq	$0, %rax
	setg	%al
	pushq	%rax
	popq	%rax
	cmp	$0, %rax
	je	ELSE_0
	subq	$0, %rsp
	pushq	$2
	pushq	$1
	popq	%rax
	popq	%rcx
	cmpq	%rax, %rcx
	movq	$0, %rax
	setg	%al
	pushq	%rax
	popq	%rax
	cmp	$0, %rax
	je	ELSE_1
	subq	$0, %rsp
	pushq	$1
	popq	%rax
	leave
	ret
	jmp	IF_END_1
ELSE_1:
	subq	$0, %rsp
	pushq	$2
	popq	%rax
	leave
	ret
IF_END_1:
	jmp	IF_END_0
ELSE_0:
	subq	$0, %rsp
	pushq	$3
	popq	%rax
	leave
	ret
IF_END_0:
	.cfi_endproc
