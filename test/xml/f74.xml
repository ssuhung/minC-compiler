<program xmlns="https://program.com">
 <fun_def>
  <name>fib</name>
  <params>
   <param>
    <type>
     <primitive_type>long</primitive_type>
    </type>
    <name>n</name>
   </param>
  </params>
  <return_type>
   <primitive_type>long</primitive_type>
  </return_type>
  <body>
   <compound>
    <decls/>
    <stmts>
     <if>
      <cond>
       <bin_op>
        <op>&lt;</op>
        <left>
         <var>n</var>
        </left>
        <right>
         <int_literal>2</int_literal>
        </right>
       </bin_op>
      </cond>
      <then>
       <compound>
        <decls/>
        <stmts>
         <return>
          <int_literal>1</int_literal>
         </return>
        </stmts>
       </compound>
      </then>
      <else>
       <compound>
        <decls>
         <decl>
          <type>
           <primitive_type>long</primitive_type>
          </type>
          <name>x</name>
         </decl>
         <decl>
          <type>
           <primitive_type>long</primitive_type>
          </type>
          <name>y</name>
         </decl>
        </decls>
        <stmts>
         <expr_stmt>
          <bin_op>
           <op>=</op>
           <left>
            <var>x</var>
           </left>
           <right>
            <call>
             <fun>
              <var>fib</var>
             </fun>
             <args>
              <bin_op>
               <op>-</op>
               <left>
                <var>n</var>
               </left>
               <right>
                <int_literal>1</int_literal>
               </right>
              </bin_op>
             </args>
            </call>
           </right>
          </bin_op>
         </expr_stmt>
         <expr_stmt>
          <bin_op>
           <op>=</op>
           <left>
            <var>y</var>
           </left>
           <right>
            <call>
             <fun>
              <var>fib</var>
             </fun>
             <args>
              <bin_op>
               <op>-</op>
               <left>
                <var>n</var>
               </left>
               <right>
                <int_literal>2</int_literal>
               </right>
              </bin_op>
             </args>
            </call>
           </right>
          </bin_op>
         </expr_stmt>
         <return>
          <bin_op>
           <op>+</op>
           <left>
            <var>x</var>
           </left>
           <right>
            <var>y</var>
           </right>
          </bin_op>
         </return>
        </stmts>
       </compound>
      </else>
     </if>
    </stmts>
   </compound>
  </body>
 </fun_def>
 <fun_def>
  <name>f</name>
  <params>
   <param>
    <type>
     <primitive_type>long</primitive_type>
    </type>
    <name>n</name>
   </param>
  </params>
  <return_type>
   <primitive_type>long</primitive_type>
  </return_type>
  <body>
   <compound>
    <decls>
     <decl>
      <type>
       <primitive_type>long</primitive_type>
      </type>
      <name>m</name>
     </decl>
     <decl>
      <type>
       <primitive_type>long</primitive_type>
      </type>
      <name>y</name>
     </decl>
    </decls>
    <stmts>
     <expr_stmt>
      <bin_op>
       <op>=</op>
       <left>
        <var>m</var>
       </left>
       <right>
        <bin_op>
         <op>+</op>
         <left>
          <int_literal>10</int_literal>
         </left>
         <right>
          <bin_op>
           <op>%</op>
           <left>
            <var>n</var>
           </left>
           <right>
            <int_literal>20</int_literal>
           </right>
          </bin_op>
         </right>
        </bin_op>
       </right>
      </bin_op>
     </expr_stmt>
     <expr_stmt>
      <bin_op>
       <op>=</op>
       <left>
        <var>y</var>
       </left>
       <right>
        <call>
         <fun>
          <var>fib</var>
         </fun>
         <args>
          <var>m</var>
         </args>
        </call>
       </right>
      </bin_op>
     </expr_stmt>
     <return>
      <var>y</var>
     </return>
    </stmts>
   </compound>
  </body>
 </fun_def>
</program>

